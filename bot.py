import telebot
from telebot import types

token = ""

petro = telebot.TeleBot(token)
keybord_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)

products = types.KeyboardButton('‚Ñ¢Ô∏è –¢–æ–≤–∞—Ä–∏')
cart = types.KeyboardButton('üß∫ –ö–æ—à–∏–∫')
contact = types.KeyboardButton('üìç –ö–æ–Ω—Ç–∞–∫—Ç–∏')

keybord_menu.add(products, cart, contact)


@petro.message_handler(commands=['start'])
def start(message):
    new_order = open(f'orders/new_order{message.chat.id}.txt', 'w')
    new_order.close()
    petro.send_message(message.chat.id, 'Menu:', reply_markup=keybord_menu)


@petro.message_handler(content_types=['text'])
def menu_check(message):
    # if mess.text == "/start":
    #     petro.send_message(mess.chat.id, "–ü—Ä–∏–≤—ñ—Ç, –º–µ–Ω–µ –∑–≤–∞—Ç–∏ –ü–µ—Ç—Ä–æ —è –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫."
    #                                  "\n –û–±–µ—Ä—ñ—Ç—å —ñ–∑ —Å–ø–∏—Å–∫—É: \n‚Ñ¢Ô∏è–¢–æ–≤–∞—Ä–∏ \nüß∫–ö–æ—à–∏–∫ \nüìç–ö–æ–Ω—Ç–∞–∫—Ç–∏")
    if message.text == 'hello':
        print(message.chat.id)
        petro.send_message(message.chat.id, "hello")
    if message.text == "‚Ñ¢Ô∏è –¢–æ–≤–∞—Ä–∏":
        keybord_category = types.ReplyKeyboardMarkup(resize_keyboard=True)
        menu = types.KeyboardButton('–ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
        cat_phone = types.KeyboardButton('–¢–µ–ª–µ—Ñ–æ–Ω–∏')
        cat_notebook = types.KeyboardButton('–ù–æ—É—Ç–±—É–∫–∏')
        keybord_category.add(cat_phone, cat_notebook, menu)
        petro.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é", reply_markup=keybord_category)

    if message.text == "üß∫ –ö–æ—à–∏–∫":
        file_cart = open(f'orders/new_order{message.chat.id}.txt', 'r')
        cart = file_cart.readlines()
        file_cart.close()
        total = 0
        mess_text = ''
        for i in cart:
            text_pars = i.split(';')
            mess_text = mess_text + f'{text_pars[0]} - {text_pars[1]}, —Ü—ñ–Ω–∞: {text_pars[2]}'
            total = total + int(text_pars[2].replace("$", ""))
        mess_text = mess_text + '\n ' + f'–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–º–∞: {total}$'
        orders_keybord = types.InlineKeyboardMarkup()
        button_order = types.InlineKeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data='–û—Ñ–æ—Ä–º–∏—Ç–∏')
        orders_keybord.add(button_order)
        petro.send_message(message.chat.id, mess_text, reply_markup=orders_keybord)

    if message.text == "üìç –ö–æ–Ω—Ç–∞–∫—Ç–∏":
        petro.send_message(message.chat.id, "–ú—ã –æ —Ç—É—Ç")

    if message.text == "–ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é":
        petro.send_message(message.chat.id, "Menu:", reply_markup=keybord_menu)

    if message.text == "–¢–µ–ª–µ—Ñ–æ–Ω–∏":
        phone_keybord = types.InlineKeyboardMarkup()
        file_phone = open("phone.txt", 'r')
        db_phone = file_phone.read().split('\n')
        file_phone.close()
        for i in db_phone:
            text_pars = i.split(';')
            button = types.InlineKeyboardButton(text=f'{text_pars[0]} - {text_pars[1]}, —Ü—ñ–Ω–∞: {text_pars[2]}', callback_data=i)
            phone_keybord.add(button)
        petro.send_message(message.chat.id, 'C–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ', reply_markup=phone_keybord)

    if message.text == "–ù–æ—É—Ç–±—É–∫–∏":
        notebook_keybord = types.InlineKeyboardMarkup()
        file_notebook = open("notebook.txt", 'r')
        db_notebook = file_notebook.read().split('\n')
        file_notebook.close()
        for i in db_notebook:
            text_pars = i.split(';')
            button = types.InlineKeyboardButton(text=f'{text_pars[0]} - {text_pars[1]}, —Ü—ñ–Ω–∞: {text_pars[2]}', callback_data=i)
            notebook_keybord.add(button)
        petro.send_message(message.chat.id, 'C–ø–∏—Å–æ–∫ –Ω–æ—É—Ç–±—É–∫—ñ–≤ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ', reply_markup=notebook_keybord)


@petro.callback_query_handler(func=lambda call: True)
def call_data_me(call):
    if call.data:
        if call.data == "–û—Ñ–æ—Ä–º–∏—Ç–∏":
            phone_num = petro.send_message(call.message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–∏—Ç—å—Å—è –∑ –≤–∞–º–∏ –ø—Ä–æ—Ç—è–≥–æ–º 5 —Ö–≤")
            petro.register_next_step_handler(phone_num, check_order)
        else:
            new_order = open(f'orders/new_order{call.message.chat.id}.txt', 'a')
            new_order.write(call.data + '\n')
            new_order.close()
            text_pars = call.data.split(';')
            petro.send_message(call.message.chat.id, f'{text_pars[0]}-{text_pars[1]} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞')


def check_order(message):
    file_cart = open(f'orders/new_order{message.chat.id}.txt', 'r')
    cart = file_cart.readlines()
    file_cart.close()
    total = 0
    mess_text = ''
    for i in cart:
        text_pars = i.split(';')
        mess_text = mess_text + f'{text_pars[0]} - {text_pars[1]}, —Ü—ñ–Ω–∞: {text_pars[2]}'
        total = total + int(text_pars[2].replace("$", ""))
    mess_text = mess_text + '\n ' + f'–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–º–∞: {total}$'
    orders_keybord = types.InlineKeyboardMarkup()
    button_order = types.InlineKeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data='–û—Ñ–æ—Ä–º–∏—Ç–∏')
    orders_keybord.add(button_order)
    petro.send_message(-4012209873, f'–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {message.text} \n{mess_text}')


petro.polling(none_stop=True, interval=0)
